REVOKE SELECT ON DB_GENERAL.ADMI_MOTIVO FROM DB_SOPORTE;

REVOKE UPDATE ON DB_COMERCIAL.INFO_DETALLE_SOLICITUD FROM DB_SOPORTE;

REVOKE SELECT ON DB_COMERCIAL.SEQ_INFO_SERVICIO_HISTORIAL FROM DB_SOPORTE;

REVOKE INSERT ON DB_COMERCIAL.INFO_SERVICIO_HISTORIAL FROM DB_SOPORTE;

REVOKE INSERT ON DB_COMUNICACION.INFO_COMUNICACION FROM DB_COMERCIAL;

REVOKE SELECT ON DB_COMUNICACION.SEQ_INFO_COMUNICACION FROM DB_COMERCIAL;

REVOKE INSERT ON DB_SOPORTE.INFO_DETALLE FROM DB_COMERCIAL;

REVOKE SELECT ON DB_SOPORTE.SEQ_INFO_DETALLE FROM DB_COMERCIAL;

REVOKE INSERT ON DB_COMUNICACION.INFO_DOCUMENTO_COMUNICACION FROM DB_COMERCIAL;

REVOKE SELECT ON DB_COMUNICACION.SEQ_DOCUMENTO_COMUNICACION FROM DB_COMERCIAL;

REVOKE SELECT ON DB_COMERCIAL.INFO_DETALLE_SOL_HIST FROM DB_SOPORTE;

REVOKE UPDATE ON DB_COMERCIAL.INFO_DETALLE_SOL_HIST FROM DB_SOPORTE;

REVOKE UPDATE ON DB_COMERCIAL.INFO_SERVICIO_HISTORIAL FROM DB_SOPORTE;

REVOKE INSERT ON DB_COMERCIAL.INFO_DETALLE_SOL_HIST FROM DB_SOPORTE;

REVOKE SELECT ON DB_COMERCIAL.SEQ_INFO_DETALLE_SOL_HIST FROM DB_SOPORTE;

/*
 * DROP DEL JOB 'JOB_HISTORIAL_SERV_PLANF'
 */
SET SERVEROUTPUT ON;
BEGIN
  DBMS_SCHEDULER.DROP_JOB(JOB_NAME => '"DB_COMERCIAL"."JOB_HISTORIAL_SERV_PLANF"',
                          DEFER    => FALSE,
                          FORCE    => TRUE);
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('El job a√∫n no ha sido creado...');
END;
/



